name: Serverless Deploy
on:
  push:
    branches:
      - main
permissions:
  id-token: write
  contents: read
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION || 'ap-southeast-1' }}
      ROLE_ARN: ${{ secrets.ROLE_ARN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Cache Terraform plugins
        uses: actions/cache@v4
        with:
          path: ~/.terraform.d/plugin-cache
          key: ${{ runner.os }}-terraform-${{ hashFiles('infra/**.tf') }}
      - name: Terraform Init
        run: cd infra && terraform init
      - name: Terraform Plan
        run: cd infra && terraform plan
      - name: Terraform Apply
        run: cd infra && terraform apply -auto-approve
      - name: Package Lambda
        run: |
          cd app
          zip -r ../lambda.zip . -x "*.venv*" "__pycache__/*"
      - name: Update Lambda Function Code
        run: |
          aws lambda update-function-code --function-name $(terraform -chdir=infra output -raw lambda_function_name) --zip-file fileb://lambda.zip --region ${{ env.AWS_REGION }}
      - name: Output API URL
        run: terraform -chdir=infra output -raw api_base_url
